openapi: 3.0.0
info:
    description: >
        Documenation for *Deliveryman* library at
        [https://github.com/bravepickle/deliveryman](https://github.com/bravepickle/deliveryman).
    version: "1.0.0-oas3"
    title: Deliveryman API
    termsOfService: 'http://swagger.io/terms/'
    contact:
        email: 2bravepickle@gmail.com
    license:
        name: Apache 2.0
        url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
    /batch:
        post:
            summary: Create new batch of requests
            operationId: createBatch
            responses:
                '200':
                    description: Successfully completed
                '400':
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                type: string
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: string
            security:
                - api_key: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchRequest'
                description: List of request queues and their configurations to execute
                required: true
externalDocs:
    description: Find out more
    url: 'https://github.com/bravepickle/deliveryman'
servers:
    - url: 'https://virtserver.swaggerhub.com/bravepickle/deliveryman/1.0.0'
    - url: 'http://virtserver.swaggerhub.com/bravepickle/deliveryman/1.0.0'
components:
    securitySchemes:
        api_key:
            type: apiKey
            name: api_key
            in: header
    schemas:
        BatchRequest:
            type: object
            description: Batch request body
            properties:
                config:
                    $ref: '#/components/schemas/RequestConfig'
                queues:
                    type: array
                    items:
                        $ref: '#/components/schemas/Queue'
        RequestConfig:
            type: object
            properties:
                headers:
                    type: array
                    description: List of requests to send together with request
                    items:
                        $ref: '#/components/schemas/RequestHeader'
                    default: []
                configMerge:
                    type: string
                    description: Configs merge strategy per request
                    default: first
                    enum:
                        - first
                        - unique
                        - ignore
                onFail:
                    type: string
                    description: Strategy on handling failed requests
                    default: abort
                    enum:
                        - abort
                        - proceed
                        - abort-sequence
                expectedStatusCodes:
                    type: array
                    description: >-
                        List of all status codes that are considered OK, if returned. If any
                        other status codes received by requests, then request is considered
                        as failed
                    items:
                        type: integer
                    default:
                        - 200
                        - 201
                        - 202
                        - 204
                silent:
                    type: boolean
                    description: Do not return response data from batch requests back to sender
                    default: false
        Queue:
            type: array
            items:
                $ref: '#/components/schemas/Request'
        Request:
            type: object
            description: Request data to send
            properties:
                id:
                    description: Identifier for given request for referencing aka alias
                    type: string
                config:
                    $ref: '#/components/schemas/RequestConfig'
                query:
                    type: array
                    items:
                        $ref: '#/components/schemas/RequestQuery'
                data:
                    $ref: '#/components/schemas/RequestData'
        RequestQuery:
            type: object
            description: Query key-value pairs for request
            additionalProperties:
                type: string
        RequestData:
            type: object
            description: Data specified in body of request
            additionalProperties: true
        RequestHeader:
            type: object
            description: Request HTTP headers to send to request
            properties:
                name:
                    type: string
                    description: Name of the HTTP request header
                value:
                    type: string
                    description: Value of the HTTP request header