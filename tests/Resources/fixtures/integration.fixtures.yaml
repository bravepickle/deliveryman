batchRequestProvider:
    -
        config:
            domains:
                - 'http://example.com'
            channels:
                http_queue:
                    request_options: { debug: false, allow_redirects: false, headers: { User-Agent: [testing/1.0] } }

        input:
            data:
                -   - { uri: 'http://example.com/ask-something', id: ask-something }
                    - { uri: 'http://example.com/do-something', method: PUT, data: encoded_text }

        responses:
            -   statusCode: 200
                headers:
                    Content-Type: [application/json]
                data: '{"success":true}'
            -   statusCode: 204
                headers:
                    Content-Type: [application/json]
                data: null

        sentRequests:
            -   method: GET
                uri: 'http://example.com/ask-something'
                headers:
                    User-Agent: [testing/1.0]
                data: ''
            -   method: PUT
                uri: 'http://example.com/do-something'
                headers:
                    User-Agent: [testing/1.0]
                    Content-Length: ['12']
                data: encoded_text

        output:
            data:
                ask-something:
                    id: ask-something
                    headers: [{ name: Content-Type, value: application/json }]
                    statusCode: 200
                    data: { success: true }
                'PUT_http://example.com/do-something':
                    id: 'PUT_http://example.com/do-something'
                    headers: [{ name: Content-Type, value: application/json }]
                    statusCode: 204
                    data: null
            status: ok
            errors: null
            failed: null

configProvider:
    -   config:
            domains:
                - 'http://example.com'
            silent: true
            channels:
                http_queue:
                    request_options: { headers: { User-Agent: [testing/1.0] } }
        input:
            data:
                -   uri: 'http://example.com/ask-something'
                    id: '#45'
        responses:
            -   statusCode: 200
                headers:
                    Content-Type: [application/json]
                data: '{"success":true}'
        sentRequests:
            -   uri: 'http://example.com/ask-something'
                method: GET
                headers:
                    User-Agent: [testing/1.0]
                data: ''
        output:
            data: null
            status: ok
            errors: null
            failed: null
    -   config:
            domains:
                - 'http://example.com'
            silent: true
            channels:
                http_queue:
                    request_options: { headers: { User-Agent: [testing/1.0] } }
                    expected_status_codes: [200]
        input:
            data:
                -   uri: 'http://example.com/ask-something'
                    id: '#45'
                -   uri: 'http://example.com/be-something'
                    id: '#46'
                    method: post
                    data: { user: john }
        responses:
            -   statusCode: 200
                headers:
                    Content-Type: [application/json]
                data: '{"success":true}'
            -   statusCode: 500
                headers:
                    Content-Type: [application/json]
                data: '{"err":"server error"}'
        sentRequests:
            -   method: GET
                uri: 'http://example.com/ask-something'
                headers:
                    User-Agent: [testing/1.0]
                data: ''
            -   method: POST
                uri: 'http://example.com/be-something'
                headers:
                    User-Agent: [testing/1.0]
                    Content-Length: '15'
                    Content-Type: application/json
                data: '{"user":"john"}'
        output:
            data: null
            status: failed
            errors:
                '#46': 'Request failed to complete.'
            failed:
                '#46':
                    id: '#46'
                    headers: [{ name: Content-Type, value: application/json }]
                    statusCode: 500
                    data: { err: 'server error' }
    -   config:
            domains:
                - 'http://example.com'
            silent: false
            channels:
                http_queue:
                    request_options: { headers: { User-Agent: [testing/1.0] } }
        input:
            data:
                -   - { uri: 'http://example.com/foo', id: '#45', config: { silent: true } }
                    - { uri: 'http://example.com/bar', id: '#46' }
        responses:
            -   statusCode: 200
                headers:
                    Content-Type: [application/json]
                data: '{"success":true}'
            -   statusCode: 200
                headers:
                    X-API: ['123']
                data: '{"data":"ok"}'
        sentRequests:
            -   method: GET
                uri: 'http://example.com/foo'
                headers:
                    User-Agent: [testing/1.0]
                data: ''
            -   method: GET
                uri: 'http://example.com/bar'
                headers:
                    User-Agent: [testing/1.0]
                data: ''
        output:
            errors: null
            failed: null
            status: ok
            data:
                '#46':
                    id: '#46'
                    headers: [{ name: X-API, value: '123' }]
                    statusCode: 200
                    data: { data: ok }
    -   config:
            domains:
                - 'http://example.com'
            on_fail: abort
            channels:
                http_queue:
                    request_options: { headers: { User-Agent: [testing/1.0] } }
        input:
            data:
                -   - { uri: 'http://example.com/leslie', id: 'leslie', headers: [{ name: 'X-Auth', value: 'secured_key' }], method: 'HEAD' }
        responses:
            -   statusCode: 401
                headers:
                    Content-Type: [application/json]
                data: '{"error":"Unauthorized"}'
        sentRequests:
            -   method: HEAD
                uri: 'http://example.com/leslie'
                headers:
                    User-Agent: [testing/1.0]
                    X-Auth: [secured_key]
        output:
            data: null
            status: aborted
            errors:
                leslie: 'Request failed to complete.'
            failed:
                leslie:
                    id: 'leslie'
                    headers: [{ name: Content-Type, value: 'application/json' }]
                    statusCode: 401
                    data: { error: Unauthorized }

clientRequestProvider:
    -   config:
            domains:
                - 'http://example.com'
            channels:
                http_queue:
                    request_options: { headers: { User-Agent: [testing/1.0] } }
                    sender_headers:
                        - x-foo
                    receiver_headers:
                        - X-Status

        input:
            headers:
                'X-Bar': 'unused header'
                'X-Foo': 'jeronimo'
            data:
                - { uri: 'http://example.com/user', id: 'user', headers: [{ name: 'X-Auth', value: 'secured_key' }]}
        responses:
            -   statusCode: 200
                headers:
                    Content-Type: [application/json]
                    X-Status: [accepted]
                    X-CSRF: [abdef]
                data: 'John Doe found!'
        sentRequests:
            -   method: GET
                uri: 'http://example.com/user'
                headers:
                    User-Agent: [testing/1.0]
                    X-Auth: [secured_key]
                    x-foo: [jeronimo]
        output:
            failed: null
            status: ok
            errors: null
            data:
                user:
                    id: 'user'
                    headers: [{ name: X-Status, value: 'accepted' }]
                    statusCode: 200
                    data: 'John Doe found!'